【ファイル構成】
・生成モデルを定義したMATLAB関数群
  - getSpikeDataFromMATmodel01.m
  - getSpikeDataFromMATmodel02.m
  - getSpikeDataFromMATmodel03.m
・MATネットワークモデルによるデータ生成のMATLABメイン関数
  - mainGenerateData.m
・Hodgkin-Huxleyネットワークからのデータ生成のためのPyNESTコード
  - HHDataGen01.py
・PyNESTで生成されたデータからスパイクデータへ変換するためのMATLAB関数
  - transVoltageToSpike.m
・dataフォルダの下のファイル群: サンプルデータ

【利用方法】

・MATネットワークモデルからのデータ生成方法
　
　MATLAB上から以下のようなコマンドを実行するだけです。
　>> mainGenerateData('MAT',1,1);
　この結果は、
     "data/MAT_001.mat"
　に保存されます。出力ファイルのデータ構造は後で説明します。

　なお構文は以下の通りです。
     - 第1引数: 保存先ファイルの接頭語
       * データが"data/MAT_???.mat"に保存されます。
     - 第2引数: モデルのインデクス
       * 3つ用意した生成モデルのどれを利用するかを指定します。
　　　　 sig-bioで発表したデータは3が対応します。
     - 第3引数: 乱数のシード
       * sig-bioで発表したデータ1-100までを利用しました。
     - 出力結果: dataフォルダの下に以下のファイルが生成されます。
          [第1引数の文字列]_[第3引数のシード番号].mat

・Hodgkin-Huxleyネットワークモデルからのデータ生成方法

　まずPyNESTで膜電位の時系列を生成します。ターミナルから以下の
　コマンドを実行してください。

　> python HHDataGen01.py tmp 1

　この結果は、"tmp_001_voltage.dat"に保存されます。

　なお、構文は以下の通りです。
     - 第1引数: 実行するPython関数
     - 第2引数: 保存先ファイルの接頭語
     - 第3引数: 乱数のシード
       * sig-bioで発表したデータ1-100までを利用しました。
     - 出力結果: dataフォルダの下に以下のファイルが生成されます。
           [第1引数の文字列]_[第3引数のシード番号]_voltage.dat
  
  次にMATLAB上から以下のようなコマンドを実行してください。
  >> transVoltageToSpike('data/tmp',1);
  この結果は、
     "data/tmp_001.mat"
　に保存されます。

　なお構文は以下の通りです。
     - 第1引数: 膜電位データファイルの接頭語
       * データ"data/tmp_???_.mat"を読み込みます。
     - 第2引数: データ生成に利用した乱数シード番号
     - 出力結果: dataフォルダの下に以下のファイルが生成されます。
          [第1引数の文字列]_[第2引数のシード番号].mat

【出力ファイルのデータ構造】
いくつか変数を含んでいますが、重要なのは以下の2個だけです。

・tbin （1*データ長 の行ベクトル）
　スパイクの有無を記録した時刻列です。

・Y （ニューロン数*データ長 の行列）
　スパイクデータを記録した行列で以下のように定義されています。
　Y(i,j): i番目のニューロンがj時刻目でスパイクを発生した時に1、
　　　　　それ以外は0の値を持つ指標変数です。
